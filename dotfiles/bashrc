export PATH=/usr/local/share/npm/bin:$PATH
export PATH=/usr/local/sbin:$PATH
export PATH=/usr/local/bin:$PATH
export PATH=~/bin:$PATH
export PATH=~/.rbenv/bin:$PATH

# export CUCUMBER_FORMAT="progress"

if [[ -s /Users/chrisroos/.rvm/scripts/rvm ]] ; then source /Users/chrisroos/.rvm/scripts/rvm ; fi

# Ensure rbenv exists before initializing it
command -v rbenv > /dev/null 2>&1
if [ $? -eq 0 ]; then
  eval "$(rbenv init -)"
fi

export PATH=./.bundle/bin:$PATH

export PS1='\[\e[1;30m\]\h:\[\e[1;34m\]\w\$\[\e[0m\] '

export LANG=en_GB.UTF-8

export EDITOR="atom -w"

# Required by bash-completion brew package
[ -f /usr/local/etc/bash_completion ] && . /usr/local/etc/bash_completion

case `uname -a` in
  Darwin*)
    source ~/.bash.mac
    ;;
  FreeBSD*)
    # FreeBSD specific shenanigans
    ;;
  *)
    # Linux/Other specific shenanigans
    ;;
esac

# Grab the git-completion script with:
#   curl https://raw.github.com/git/git/master/contrib/completion/git-completion.bash -o ~/.git-completion.bash
if [ -f ~/.git-completion.bash ]; then
  source ~/.git-completion.bash
fi

if [ -f ~/.bash_local ]; then
   source ~/.bash_local
fi

if [ -f ~/.aliases ]; then
   source ~/.aliases
fi

# Magic Ruby settings to make tests run faster. Courtesy of Chris Zetter.
export RUBY_HEAP_MIN_SLOTS=1000000
export RUBY_HEAP_SLOTS_INCREMENT=1000000
export RUBY_HEAP_SLOTS_GROWTH_FACTOR=1
export RUBY_GC_MALLOC_LIMIT=1000000000
export RUBY_HEAP_FREE_MIN=500000
export RUBY_FREE_MIN=$RUBY_HEAP_FREE_MIN
export RUBY_GC_HEAP_FREE_SLOTS=$RUBY_FREE_MIN # For Ruby 2.1
export RUBY_GC_HEAP_INIT_SLOTS=$RUBY_HEAP_MIN_SLOTS # For Ruby 2.1

# Autocomplete for AWS CLI
complete -C aws_completer aws

# TensorFlow
export CUDA_HOME=/usr/local/cuda
export DYLD_LIBRARY_PATH="$DYLD_LIBRARY_PATH:$CUDA_HOME/lib"
export PATH="$CUDA_HOME/bin:$PATH"

# Direnv
eval "$(direnv hook bash)"

export NVM_DIR="$HOME/.nvm"
[ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"  # This loads nvm
[ -s "$NVM_DIR/bash_completion" ] && \. "$NVM_DIR/bash_completion"  # This loads nvm bash_completion
